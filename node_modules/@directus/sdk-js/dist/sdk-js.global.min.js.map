{"version":3,"file":"sdk-js.global.min.js","sources":["../src/handlers/items.ts","../src/handlers/server.ts","../src/handlers/utils.ts","../src/handlers/activity.ts","../src/handlers/folders.ts","../src/handlers/permissions.ts","../src/handlers/presets.ts","../src/handlers/relations.ts","../src/handlers/revisions.ts","../src/handlers/roles.ts","../src/handlers/users.ts","../src/handlers/settings.ts","../src/handlers/files.ts","../src/handlers/collections.ts","../src/handlers/fields.ts","../src/handlers/auth.ts","../src/utils/browser-store.ts","../src/utils/memory-store.ts","../src/index.ts"],"sourcesContent":["import { Query, Item, Payload, Response, PrimaryKey } from '../types';\nimport { AxiosInstance } from 'axios';\n\nexport class ItemsHandler {\n\taxios: AxiosInstance;\n\tprivate endpoint: string;\n\n\tconstructor(collection: string, axios: AxiosInstance) {\n\t\tthis.axios = axios;\n\t\tthis.endpoint = collection.startsWith('directus_') ? `/${collection.substring(9)}/` : `/items/${collection}/`;\n\t}\n\n\tasync create<T extends Item>(payload: Payload, query?: Query): Promise<Response<T>>;\n\tasync create<T extends Item>(payloads: Payload[], query?: Query): Promise<Response<T[]>>;\n\tasync create<T extends Item>(payloads: Payload | Payload[], query?: Query): Promise<Response<T | T[]>> {\n\t\tconst result = await this.axios.post(this.endpoint, payloads, {\n\t\t\tparams: query,\n\t\t});\n\n\t\treturn result.data;\n\t}\n\n\tasync read<T extends Item>(): Promise<Response<T | T[]>>;\n\tasync read<T extends Item>(query: Query & { single: true }): Promise<Response<T>>;\n\tasync read<T extends Item>(query: Query): Promise<Response<T | T[]>>;\n\tasync read<T extends Item>(key: PrimaryKey, query?: Query): Promise<Response<T>>;\n\tasync read<T extends Item>(keys: PrimaryKey[], query?: Query): Promise<Response<T | T[]>>;\n\tasync read<T extends Item>(\n\t\tkeysOrQuery?: PrimaryKey | PrimaryKey[] | Query,\n\t\tquery?: Query & { single: boolean }\n\t): Promise<Response<T | T[]>> {\n\t\tlet keys: PrimaryKey | PrimaryKey[] | null = null;\n\n\t\tif (\n\t\t\tkeysOrQuery &&\n\t\t\t(Array.isArray(keysOrQuery) || typeof keysOrQuery === 'string' || typeof keysOrQuery === 'number')\n\t\t) {\n\t\t\tkeys = keysOrQuery;\n\t\t}\n\n\t\tlet params: Query = {};\n\n\t\tif (query) {\n\t\t\tparams = query;\n\t\t} else if (!query && typeof keysOrQuery === 'object' && Array.isArray(keysOrQuery) === false) {\n\t\t\tparams = keysOrQuery as Query;\n\t\t}\n\n\t\tlet endpoint = this.endpoint;\n\n\t\tif (keys) {\n\t\t\tendpoint += keys;\n\t\t}\n\n\t\tconst result = await this.axios.get(endpoint, { params });\n\n\t\treturn result.data;\n\t}\n\n\tasync update<T extends Item>(key: PrimaryKey, payload: Payload, query?: Query): Promise<Response<T>>;\n\tasync update<T extends Item>(keys: PrimaryKey[], payload: Payload, query?: Query): Promise<Response<T[]>>;\n\tasync update<T extends Item>(payload: Payload[], query?: Query): Promise<Response<T[]>>;\n\tasync update<T extends Item>(payload: Payload, query: Query): Promise<Response<T[]>>;\n\tasync update<T extends Item>(\n\t\tkeyOrPayload: PrimaryKey | PrimaryKey[] | Payload | Payload[],\n\t\tpayloadOrQuery?: Payload | Query,\n\t\tquery?: Query\n\t): Promise<Response<T | T[]>> {\n\t\tif (\n\t\t\ttypeof keyOrPayload === 'string' ||\n\t\t\ttypeof keyOrPayload === 'number' ||\n\t\t\t(Array.isArray(keyOrPayload) && (keyOrPayload as any[]).every((key) => ['string', 'number'].includes(typeof key)))\n\t\t) {\n\t\t\tconst key = keyOrPayload as PrimaryKey | PrimaryKey[];\n\t\t\tconst payload = payloadOrQuery as Payload;\n\n\t\t\tconst result = await this.axios.patch(`${this.endpoint}${key}`, payload, {\n\t\t\t\tparams: query,\n\t\t\t});\n\t\t\treturn result.data;\n\t\t} else {\n\t\t\tconst result = await this.axios.patch(`${this.endpoint}`, keyOrPayload, {\n\t\t\t\tparams: payloadOrQuery,\n\t\t\t});\n\n\t\t\treturn result.data;\n\t\t}\n\t}\n\n\tasync delete(key: PrimaryKey): Promise<void>;\n\tasync delete(keys: PrimaryKey[]): Promise<void>;\n\tasync delete(keys: PrimaryKey | PrimaryKey[]): Promise<void> {\n\t\tawait this.axios.delete(`${this.endpoint}${keys}`);\n\t}\n}\n","import { AxiosInstance } from 'axios';\nimport type { OpenAPIObject } from 'openapi3-ts';\n\nexport type ServerInfo = {\n\tproject: {\n\t\tproject_name: string;\n\t\tproject_logo: string | null;\n\t\tproject_color: string | null;\n\t\tpublic_foreground: string | null;\n\t\tpublic_background: string | null;\n\t\tpublic_note: string | null;\n\t\tcustom_css: null;\n\t};\n\tdirectus?: { version: string };\n\tnode?: { uptime: number; version: string };\n\tos?: { totalmem: number; type: string; uptime: number; version: string };\n};\n\nexport class ServerHandler {\n\tprivate axios: AxiosInstance;\n\n\tconstructor(axios: AxiosInstance) {\n\t\tthis.axios = axios;\n\t}\n\n\tspecs = {\n\t\toas: async (): Promise<OpenAPIObject> => {\n\t\t\tconst result = await this.axios.get('/server/specs/oas');\n\t\t\treturn result.data;\n\t\t},\n\t};\n\n\tasync ping(): Promise<'pong'> {\n\t\tawait this.axios.get('/server/ping');\n\t\treturn 'pong';\n\t}\n\n\tasync info(): Promise<{ data: ServerInfo }> {\n\t\tconst result = await this.axios.get('/server/info');\n\t\treturn result.data;\n\t}\n}\n","import { AxiosInstance } from 'axios';\nimport { PrimaryKey } from '../types';\n\nexport class UtilsHandler {\n\tprivate axios: AxiosInstance;\n\n\tconstructor(axios: AxiosInstance) {\n\t\tthis.axios = axios;\n\t}\n\n\trandom = {\n\t\tstring: async (length: number = 32): Promise<{ data: string }> => {\n\t\t\tconst result = await this.axios.get('/utils/random/string', { params: { length } });\n\t\t\treturn result.data;\n\t\t},\n\t};\n\n\thash = {\n\t\tgenerate: async (string: string): Promise<{ data: string }> => {\n\t\t\tconst result = await this.axios.post('/utils/hash/generate', { string });\n\t\t\treturn result.data;\n\t\t},\n\t\tverify: async (string: string, hash: string): Promise<{ data: boolean }> => {\n\t\t\tconst result = await this.axios.post('/utils/hash/verify', { string, hash });\n\t\t\treturn result.data;\n\t\t},\n\t};\n\n\tasync sort(collection: string, item: PrimaryKey, to: PrimaryKey): Promise<void> {\n\t\tawait this.axios.post(`/utils/sort/${collection}`, { item, to });\n\t}\n\n\tasync revert(revision: PrimaryKey): Promise<void> {\n\t\tawait this.axios.post(`/utils/revert/${revision}`);\n\t}\n}\n","import { AxiosInstance } from 'axios';\nimport { ItemsHandler } from './items';\nimport { Query, PrimaryKey, Item, Response } from '../types';\n\nexport class ActivityHandler {\n\tprivate axios: AxiosInstance;\n\tprivate itemsHandler: ItemsHandler;\n\n\tconstructor(axios: AxiosInstance) {\n\t\tthis.axios = axios;\n\t\tthis.itemsHandler = new ItemsHandler('directus_activity', axios);\n\t}\n\n\tasync read<T extends Item>(query?: Query): Promise<Response<T | T[]>>;\n\tasync read<T extends Item>(key: PrimaryKey, query?: Query): Promise<Response<T>>;\n\tasync read<T extends Item>(keys: PrimaryKey[], query?: Query): Promise<Response<T | T[]>>;\n\tasync read<T extends Item>(\n\t\tkeysOrQuery?: PrimaryKey | PrimaryKey[] | Query,\n\t\tquery?: Query & { single: boolean }\n\t): Promise<Response<T | T[]>> {\n\t\tconst result = await this.itemsHandler.read<T>(keysOrQuery as any, query as any);\n\t\treturn result;\n\t}\n\n\tcomments = {\n\t\tcreate: async (payload: { collection: string; item: string; comment: string }): Promise<Response<Item>> => {\n\t\t\tconst response = await this.axios.post('/activity/comments', payload);\n\t\t\treturn response.data;\n\t\t},\n\t\tupdate: async (key: PrimaryKey, payload: { comment: string }): Promise<{ data: Item | null }> => {\n\t\t\tconst response = await this.axios.patch(`/activity/comments/${key}`, payload);\n\t\t\treturn response.data;\n\t\t},\n\t\tdelete: async (key: PrimaryKey): Promise<void> => {\n\t\t\tawait this.axios.delete(`/activity/comments/${key}`);\n\t\t},\n\t};\n}\n","import { AxiosInstance } from 'axios';\nimport { ItemsHandler } from './items';\n\nexport class FoldersHandler extends ItemsHandler {\n\tconstructor(axios: AxiosInstance) {\n\t\tsuper('directus_folders', axios);\n\t}\n}\n","import { AxiosInstance } from 'axios';\nimport { ItemsHandler } from './items';\n\nexport class PermissionsHandler extends ItemsHandler {\n\tconstructor(axios: AxiosInstance) {\n\t\tsuper('directus_permissions', axios);\n\t}\n}\n","import { AxiosInstance } from 'axios';\nimport { ItemsHandler } from './items';\n\nexport class PresetsHandler extends ItemsHandler {\n\tconstructor(axios: AxiosInstance) {\n\t\tsuper('directus_presets', axios);\n\t}\n}\n","import { AxiosInstance } from 'axios';\nimport { ItemsHandler } from './items';\n\nexport class RelationsHandler extends ItemsHandler {\n\tconstructor(axios: AxiosInstance) {\n\t\tsuper('directus_relations', axios);\n\t}\n}\n","import { AxiosInstance } from 'axios';\nimport { ItemsHandler } from './items';\n\nexport class RevisionsHandler extends ItemsHandler {\n\tconstructor(axios: AxiosInstance) {\n\t\tsuper('directus_revisions', axios);\n\t}\n}\n","import { AxiosInstance } from 'axios';\nimport { ItemsHandler } from './items';\n\nexport class RolesHandler extends ItemsHandler {\n\tconstructor(axios: AxiosInstance) {\n\t\tsuper('directus_roles', axios);\n\t}\n}\n","import { AxiosInstance } from 'axios';\nimport { ItemsHandler } from './items';\nimport { Query, Payload } from '../types';\n\nexport type UserInfo = {\n\tavatar: string | null;\n\tdescription: string | null;\n\temail: string;\n\tfirst_name: string | null;\n\tid: string;\n\tlanguage: string;\n\tlast_access: string;\n\tlast_name: string | null;\n\tlast_page: string;\n\tlocation: string | null;\n\tpassword: string;\n\trole: string;\n\tstatus: string;\n\ttags: string[];\n\ttfa_secret: string | null;\n\ttheme: 'auto' | 'dark' | 'light';\n\ttitle: string | null;\n\ttoken: string | null;\n};\n\nexport class UsersHandler extends ItemsHandler {\n\tconstructor(axios: AxiosInstance) {\n\t\tsuper('directus_users', axios);\n\t}\n\n\tasync invite(email: string | string[], role: string): Promise<void> {\n\t\tawait this.axios.post('/users/invite', { email, role });\n\t}\n\n\tasync acceptInvite(token: string, password: string): Promise<void> {\n\t\tawait this.axios.post('/users/invite/accept', { token, password });\n\t}\n\n\ttfa = {\n\t\tenable: async (password: string): Promise<void> => {\n\t\t\tawait this.axios.post('/users/tfa/enable', { password });\n\t\t},\n\t\tdisable: async (otp: string): Promise<void> => {\n\t\t\tawait this.axios.post('/users/tfa/disable', { otp });\n\t\t},\n\t};\n\n\tme = {\n\t\tread: async (query?: Query): Promise<{ data: Partial<UserInfo> }> => {\n\t\t\tconst response = await this.axios.get('/users/me', { params: query });\n\t\t\treturn response.data;\n\t\t},\n\t\tupdate: async (payload: Payload, query?: Query): Promise<{ data: Partial<UserInfo> }> => {\n\t\t\tconst response = await this.axios.patch('/users/me', payload, { params: query });\n\t\t\treturn response.data;\n\t\t},\n\t};\n}\n","import { AxiosInstance } from 'axios';\nimport { ItemsHandler } from './items';\n\nexport class SettingsHandler extends ItemsHandler {\n\tconstructor(axios: AxiosInstance) {\n\t\tsuper('directus_settings', axios);\n\t}\n}\n","import { AxiosInstance } from 'axios';\nimport { ItemsHandler } from './items';\n\nexport class FilesHandler extends ItemsHandler {\n\tconstructor(axios: AxiosInstance) {\n\t\tsuper('directus_files', axios);\n\t}\n}\n","import { AxiosInstance } from 'axios';\nimport { ItemsHandler } from './items';\n\nexport class CollectionsHandler extends ItemsHandler {\n\tconstructor(axios: AxiosInstance) {\n\t\tsuper('directus_collections', axios);\n\t}\n}\n","import { AxiosInstance } from 'axios';\nimport { ItemsHandler } from './items';\n\nexport class FieldsHandler extends ItemsHandler {\n\tconstructor(axios: AxiosInstance) {\n\t\tsuper('directus_fields', axios);\n\t}\n}\n","import { AxiosInstance, AxiosRequestConfig, AxiosError } from 'axios';\nimport { AuthStorage } from '../types';\n\nexport type LoginCredentials = {\n\temail: string;\n\tpassword: string;\n\totp?: string;\n};\n\nexport type AuthOptions = {\n\tmode: 'cookie' | 'json';\n\tautoRefresh: boolean;\n\tstorage: AuthStorage;\n};\n\nexport type AuthResponse = {\n\taccess_token: string;\n\texpires: number;\n\trefresh_token?: string;\n};\n\nexport class AuthHandler {\n\tprivate axios: AxiosInstance;\n\tprivate storage: AuthStorage;\n\tprivate mode: 'cookie' | 'json';\n\tprivate autoRefresh: boolean;\n\tprivate autoRefreshTimeout: ReturnType<typeof setTimeout> | null = null;\n\tprivate expiresAt?: number;\n\t/**\n\t * Used for tracking if accessToken is restored from store to config.\n\t * Axios uses this number for interceptor. If it's number it means it's inited.\n\t */\n\tprivate accessTokenInitId: number | null = null;\n\n\tconstructor(axios: AxiosInstance, options: AuthOptions) {\n\t\tthis.axios = axios;\n\t\tthis.storage = options.storage;\n\t\tthis.mode = options.mode;\n\t\tthis.autoRefresh = options.autoRefresh;\n\n\t\tthis.accessTokenInitId = this.axios.interceptors.request.use((config) => this.initializeAccessToken(config));\n\n\t\tif (this.autoRefresh) {\n\t\t\tthis.refresh(true);\n\t\t}\n\t}\n\n\tget token(): string | null {\n\t\treturn this.axios.defaults.headers?.Authorization?.split(' ')[1] || null;\n\t}\n\n\tset token(val: string | null) {\n\t\tif (val === null) {\n\t\t\tdelete this.axios.defaults.headers?.Authorization;\n\t\t} else {\n\t\t\tthis.axios.defaults.headers = {\n\t\t\t\t...(this.axios.defaults.headers || {}),\n\t\t\t\tAuthorization: `Bearer ${val}`,\n\t\t\t};\n\t\t}\n\t}\n\n\tasync login(credentials: LoginCredentials): Promise<{ data: AuthResponse }> {\n\t\tthis.removeTimeout();\n\t\tconst response = await this.axios.post('/auth/login', { ...credentials, mode: this.mode });\n\n\t\tconst data = response.data.data;\n\t\tthis.token = data.access_token;\n\t\tthis.expiresAt = Date.now() + data.expires;\n\n\t\tawait this.storage.setItem('directus_access_token', this.token);\n\t\tawait this.storage.setItem('directus_access_token_expires', this.expiresAt);\n\n\t\tif (this.mode === 'json') {\n\t\t\tawait this.storage.setItem('directus_refresh_token', data.refresh_token);\n\t\t}\n\t\tif (this.autoRefresh) {\n\t\t\tthis.refresh(true);\n\t\t}\n\n\t\treturn response.data;\n\t}\n\n\t/**\n\t * Refresh access token 10 seconds before expiration\n\t */\n\tasync refresh(isInitialInvoke: Boolean): Promise<{ data: AuthResponse } | undefined> {\n\t\tthis.removeTimeout();\n\n\t\tthis.expiresAt = await this.storage.getItem('directus_access_token_expires');\n\t\tif (!this.expiresAt) return;\n\n\t\tif (Date.now() + 10000 < this.expiresAt && this.autoRefresh) {\n\t\t\tthis.autoRefreshTimeout = setTimeout(() => this.refresh(false), this.expiresAt - Date.now() - 10000);\n\t\t\tif (!isInitialInvoke) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tconst payload: Record<string, any> = { mode: this.mode };\n\n\t\tif (this.mode === 'json') {\n\t\t\tconst refreshToken = await this.storage.getItem('directus_refresh_token');\n\t\t\tpayload['refresh_token'] = refreshToken;\n\t\t}\n\n\t\tif (this.expiresAt < Date.now() + 1000) {\n\t\t\tthis.token = null;\n\t\t}\n\t\tconst response = await this.axios\n\t\t\t.post<{ data: AuthResponse }>('/auth/refresh', payload)\n\t\t\t.catch(async (error: AxiosError) => {\n\t\t\t\tconst status = error.response?.status;\n\t\t\t\tif (status === 401) {\n\t\t\t\t\tawait this.storage.removeItem('directus_access_token');\n\t\t\t\t\tawait this.storage.removeItem('directus_access_token_expires');\n\t\t\t\t\tif (this.mode === 'json') {\n\t\t\t\t\t\tawait this.storage.removeItem('directus_refresh_token');\n\t\t\t\t\t}\n\t\t\t\t\tthis.token = null;\n\t\t\t\t}\n\t\t\t\tthrow Promise.reject(error);\n\t\t\t});\n\n\t\tconst data = response.data.data;\n\t\tthis.token = data.access_token;\n\t\tthis.expiresAt = Date.now() + data.expires;\n\t\tawait this.storage.setItem('directus_access_token', this.token);\n\t\tawait this.storage.setItem('directus_access_token_expires', this.expiresAt);\n\n\t\tif (this.mode === 'json') {\n\t\t\tawait this.storage.setItem('directus_refresh_token', response.data.data.refresh_token);\n\t\t}\n\n\t\tif (this.autoRefresh) {\n\t\t\tthis.autoRefreshTimeout = setTimeout(() => this.refresh(false), data.expires - 10000);\n\t\t}\n\t\treturn response.data;\n\t}\n\n\tasync logout(): Promise<void> {\n\t\tthis.removeTimeout();\n\t\tconst data: Record<string, string> = {};\n\t\tif (this.mode === 'json') {\n\t\t\tdata.refresh_token = await this.storage.getItem('directus_refresh_token');\n\t\t}\n\t\tawait this.axios.post('/auth/logout', data);\n\n\t\tawait this.storage.removeItem('directus_access_token');\n\t\tawait this.storage.removeItem('directus_access_token_expires');\n\t\tif (this.mode === 'json') {\n\t\t\tawait this.storage.removeItem('directus_refresh_token');\n\t\t}\n\t\tthis.token = null;\n\t}\n\n\tpassword = {\n\t\trequest: async (email: string): Promise<void> => {\n\t\t\tawait this.axios.post('/auth/password/request', { email });\n\t\t},\n\n\t\treset: async (token: string, password: string): Promise<void> => {\n\t\t\tawait this.axios.post('/auth/password/reset', { token, password });\n\t\t},\n\t};\n\n\t/**\n\t * There is no prettier way to do this. We need to set access token before first request.\n\t * This way we intercept axios request and only first time request token from store,\n\t * and allows us to do new Directus(url).items(col).read() without having to handle\n\t * access_token restoration in methods\n\t */\n\tprivate async initializeAccessToken(config: AxiosRequestConfig): Promise<AxiosRequestConfig> {\n\t\tif (this.accessTokenInitId !== null) {\n\t\t\tconst token = await this.storage.getItem('directus_access_token');\n\t\t\tif (token) {\n\t\t\t\tthis.token = token;\n\t\t\t\tconfig.headers.Authorization = `Bearer ${token}`;\n\t\t\t}\n\t\t\tthis.axios.interceptors.request.eject(this.accessTokenInitId);\n\t\t\tthis.accessTokenInitId = null;\n\t\t}\n\n\t\treturn config;\n\t}\n\n\tprivate removeTimeout(): void {\n\t\tif (this.autoRefreshTimeout !== null) {\n\t\t\tclearTimeout(this.autoRefreshTimeout);\n\t\t\tthis.autoRefreshTimeout = null;\n\t\t}\n\t}\n}\n","import { AuthStorage } from '../types';\n\nexport class BrowserStore implements AuthStorage {\n\tasync getItem(key: string): Promise<string | null> {\n\t\treturn window.localStorage.getItem(key);\n\t}\n\n\tasync setItem(key: string, value: any): Promise<void> {\n\t\twindow.localStorage.setItem(key, value);\n\t}\n\n\tasync removeItem(key: string): Promise<void> {\n\t\twindow.localStorage.removeItem(key);\n\t}\n}\n","import { AuthStorage } from '../types';\n\nexport class MemoryStore implements AuthStorage {\n\tprivate values: Record<string, any> = {};\n\n\tasync getItem<T = any>(key: string): Promise<T | undefined> {\n\t\treturn this.values[key];\n\t}\n\n\tasync setItem(key: string, value: any): Promise<void> {\n\t\tthis.values[key] = value;\n\t}\n\n\tasync removeItem(key: string): Promise<void> {\n\t\tdelete this.values[key];\n\t}\n}\n","import axios, { AxiosInstance } from 'axios';\nimport {\n\tItemsHandler,\n\tServerHandler,\n\tUtilsHandler,\n\tActivityHandler,\n\tFoldersHandler,\n\tPermissionsHandler,\n\tPresetsHandler,\n\tRolesHandler,\n\tUsersHandler,\n\tSettingsHandler,\n\tFilesHandler,\n\tCollectionsHandler,\n\tFieldsHandler,\n\tAuthHandler,\n\tRelationsHandler,\n\tAuthOptions,\n\tRevisionsHandler,\n} from './handlers';\nimport { MemoryStore, BrowserStore } from './utils';\n\nclass DirectusSDK {\n\taxios: AxiosInstance;\n\tprivate authOptions: AuthOptions;\n\n\tconstructor(url: string, options?: { auth: Partial<AuthOptions> }) {\n\t\tthis.axios = axios.create({\n\t\t\tbaseURL: url,\n\t\t\twithCredentials: true,\n\t\t});\n\n\t\tthis.authOptions = {\n\t\t\tstorage: options?.auth?.storage ?? (typeof window === 'undefined' ? new MemoryStore() : new BrowserStore()),\n\t\t\tmode: options?.auth?.mode ?? 'cookie',\n\t\t\tautoRefresh: options?.auth?.autoRefresh ?? false,\n\t\t};\n\n\t\tthis.auth = new AuthHandler(this.axios, this.authOptions);\n\t}\n\n\t// Global helpers\n\t////////////////////////////////////////////////////////////////////////////////////////////////\n\n\tget url(): string {\n\t\treturn this.axios.defaults.baseURL!;\n\t}\n\n\tset url(val: string) {\n\t\tthis.axios.defaults.baseURL = val;\n\t}\n\n\t// Handlers\n\t////////////////////////////////////////////////////////////////////////////////////////////////\n\tauth: AuthHandler;\n\n\titems(collection: string): ItemsHandler {\n\t\tif (collection.startsWith('directus_')) {\n\t\t\tthrow new Error(`You can't read the \"${collection}\" collection directly.`);\n\t\t}\n\n\t\treturn new ItemsHandler(collection, this.axios);\n\t}\n\n\tget activity(): ActivityHandler {\n\t\treturn new ActivityHandler(this.axios);\n\t}\n\n\tget collections(): CollectionsHandler {\n\t\treturn new CollectionsHandler(this.axios);\n\t}\n\n\tget fields(): FieldsHandler {\n\t\treturn new FieldsHandler(this.axios);\n\t}\n\n\tget files(): FilesHandler {\n\t\treturn new FilesHandler(this.axios);\n\t}\n\n\tget folders(): FoldersHandler {\n\t\treturn new FoldersHandler(this.axios);\n\t}\n\n\tget permissions(): PermissionsHandler {\n\t\treturn new PermissionsHandler(this.axios);\n\t}\n\n\tget presets(): PresetsHandler {\n\t\treturn new PresetsHandler(this.axios);\n\t}\n\n\tget relations(): RelationsHandler {\n\t\treturn new RelationsHandler(this.axios);\n\t}\n\n\tget revisions(): RevisionsHandler {\n\t\treturn new RevisionsHandler(this.axios);\n\t}\n\n\tget roles(): RolesHandler {\n\t\treturn new RolesHandler(this.axios);\n\t}\n\n\tget server(): ServerHandler {\n\t\treturn new ServerHandler(this.axios);\n\t}\n\n\tget settings(): SettingsHandler {\n\t\treturn new SettingsHandler(this.axios);\n\t}\n\n\tget users(): UsersHandler {\n\t\treturn new UsersHandler(this.axios);\n\t}\n\n\tget utils(): UtilsHandler {\n\t\treturn new UtilsHandler(this.axios);\n\t}\n}\n\nexport default DirectusSDK;\n"],"names":["collection","axios","this","endpoint","startsWith","substring","ItemsHandler","payloads","query","post","params","_a","data","keysOrQuery","keys","Array","isArray","get","keyOrPayload","payloadOrQuery","every","key","includes","payload","patch","delete","oas","ServerHandler","string","length","generate","verify","hash","UtilsHandler","item","to","revision","create","update","itemsHandler","ActivityHandler","read","_super","__extends","_this","enable","password","disable","otp","UsersHandler","email","role","token","options","request","reset","storage","mode","autoRefresh","accessTokenInitId","interceptors","use","config","initializeAccessToken","refresh","Object","AuthHandler","defaults","headers","Authorization","split","val","credentials","removeTimeout","response","access_token","expiresAt","Date","now","expires","setItem","refresh_token","isInitialInvoke","getItem","_b","autoRefreshTimeout","setTimeout","refreshToken","catch","error","status","removeItem","Promise","reject","eject","clearTimeout","BrowserStore","window","localStorage","value","MemoryStore","values","url","baseURL","withCredentials","authOptions","auth","DirectusSDK","Error","CollectionsHandler","FieldsHandler","FilesHandler","FoldersHandler","PermissionsHandler","PresetsHandler","RelationsHandler","RevisionsHandler","RolesHandler","SettingsHandler"],"mappings":"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"}